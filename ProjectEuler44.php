<?php

/**
 *
 * Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
 *
 * 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 *
 * It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
 *
 * Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
 *
 */

ini_set('memory_limit', '1G');
require_once(dirname(__FILE__).'/HelperFunctions.php');

$primes = array();

function generatePantagonals($limit = 999)
{
	$pantagonals = array();
	foreach (range(1, $limit) as $n) {
		$prod = $n/2 * (3*$n - 1);
		$pantagonals[$prod] = $prod;
	}
	return $pantagonals;
}

function getMinimumDifference()
{
	$differences = array();
	$panragonals = generatePantagonals(9999);
	foreach ($panragonals as $a) {
		foreach ($panragonals as $b) {
			if ($b > $a) {
				break;
			}
			if (isset($panragonals[$a + $b]) && isset($panragonals[$a - $b])) {
				$differences[$a - $b] = array($a, $b);
			}
		}
	}
	return min(array_keys($differences));
}

function getMinimumDifference2()
{
	$pangagonals = array();
	for ($x=1; ; $x++) {
		$prod = $x*(3*$x-1)/2;
		foreach($pangagonals as $b) {
			$a = $prod - $b;
			if(isset($pangagonals[$a])) {
				$diff = $b - $a;
				if(isset($pangagonals[$diff])) {
					return $diff;
				}
			}
		}
		$pangagonals[$prod] = $prod;
	}
}


echo "\nThe minimum Difference of Two Pantagonal numbers whose Sum and Differences are also Pantagonal Numbers:\n";

$start = microtime(true);
$ans = getMinimumDifference();
$end = microtime(true);
$time = number_format($end - $start, 15);

echo "\nAns\t: $ans";
echo "\nTime\t: $time\n\n";

$start = microtime(true);
$ans = getMinimumDifference2();
$end = microtime(true);
$time = number_format($end - $start, 15);

echo "\nAns\t: $ans";
echo "\nTime\t: $time\n\n";
